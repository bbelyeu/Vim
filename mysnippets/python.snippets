snippet vd "Var dump variable" b
from logger import logger
logger.debug("=" * 100)
logger.debug(${1})
logger.debug("=" * 100)
endsnippet

snippet mcs "Memcache set" b
ns_version = memcache.set_ns_version(ns_version_key, ns_version)
memcache.set(cache_key, response, ns_version=ns_version)
endsnippet

snippet mcg "Memcache get" b
ns_version = memcache.get(ns_version_key)
cache_key = ('${1:api_version}', '${2:method}', params)
response = memcache.get(cache_key, ns_version=ns_version)
endsnippet

snippet parms "Colander deserialize params" b
try:
    params = schema.deserialize(params)
except colander.Invalid, e:
    return self.api.build_error_response(
        400, e.asdict(), '${1:api_name}'
    )
endsnippet

snippet docs "Doc string" b
"""
${1}
"""
endsnippet

snippet cap "Logger Sentry capture" b
logger.capture(
    '${1:raven.events.Message}',
    message='${2}',
    exc_info=sys.exc_info(),
    data={
        'sentry.interfaces.Http': {
            'env': dict(os.environ),
        },
        'culprit': '${3:full.module.name}'
    },
    extra=${4:dict}
)
endsnippet

# vim:ft=snippets:
